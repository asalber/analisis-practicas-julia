{
  "hash": "f9043d4de022e2276c248e087ca804d0",
  "result": {
    "markdown": "---\ntitle: Derivadas de funciones de varias variables\nlang: es\n#jupyter: julia-1.9\n---\n\n## Ejercicios Resueltos\n\nPara la realización de esta práctica se requieren los siguientes paquetes:\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nusing SymPy  # Para el cálculo simbólico.\nusing Plots  # Para el dibujo de gráficas.\nusing Makie, GLMakie # Para el dibujo de gráficas en 3d.\nusing HCubature # Para el cálculo numérico de integrales múltiples.\nusing LaTeXStrings  # Para usar código LaTeX en los gráficos.\nusing LinearAlgebra # Para el módulo y el producto escalar de vectores.\n```\n:::\n\n\n:::{#exr-volumen-figuras-geometricas}\nCalcular el volumen de las siguientes figuras geométricas usando integrales múltiples.\n\n:::{.callout-note collapse=\"true\"}\n## Ayuda\nPara calcular numéricamente integrales definidas de funciones de varias variables usar la función [`hcubature`](https://juliapackages.com/p/hcubature) del paquete `HCubature`.\n:::\n\na.  Un paralelogramo de base rectangular $[0,1]\\times [0,5]$ y altura $10$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=3}\n    ``` {.julia .cell-code}\n    using HCubature\n    f(x, y) = 10\n    f(v) = f(v...)\n    hcubature(f, [0,0], [1,5])\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=3}\n    ```\n    (50.0, 7.105427357601002e-15)\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Una cuña de base rectangular $[0,2]\\times [0,5]$ y altura $10$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=4}\n    ``` {.julia .cell-code}\n    f(x, y) = 10x\n    f(v) = f(v...)\n    hcubature(f, [0,0], [1,5])\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=4}\n    ```\n    (25.0, 3.552713678800501e-15)\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Un cilindro de base circular centrada en el origen con radio $1$ y altura $10$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=5}\n    ``` {.julia .cell-code}\n    f(x, y) = x^2+y^2<1 ? 10 : 0\n    f(v) = f(v...)\n    hcubature(f, [-1,-1], [1,1])\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=5}\n    ```\n    (31.41598951201623, 4.6813472010342655e-7)\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Una semiesfera centrada en el origen con radio $1$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=6}\n    ``` {.julia .cell-code}\n    f(x, y) = x^2+y^2<1 ? sqrt(1-x^2-y^2) : 0\n    f(v) = f(v...)\n    hcubature(f, [-1,-1], [1,1])\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=6}\n    ```\n    (2.0943951101375893, 3.12087277156216e-8)\n    ```\n    :::\n    :::\n    \n    \n    :::\n:::\n\n:::{#exr-integrales-iteradas}\nCalcular las siguientes integrales iteradas.\n\n:::{.callout-note collapse=\"true\"}\n## Ayuda\nPara calcular la primitiva de una función se puede usar la función [`integrate`](https://docs.juliahub.com/SymPy/KzewI/1.0.31/Tutorial/calculus/#Integrals-1) del paquete [`SymPy`](https://docs.juliahub.com/SymPy/KzewI/1.0.31/).\n:::\n\na.  $\\int_0^1\\int_0^2 x+y \\,dy\\,dx$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=7}\n    ``` {.julia .cell-code}\n    using SymPy\n    @syms x y\n    f(x, y) = x + y\n    integrate(f(x,y), (y, 0, 2), (x, 0, 1))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=7}\n    ```{=tex}\n    $3$\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  $\\int_0^2\\int_0^1 x+y \\,dx\\,dy$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=8}\n    ``` {.julia .cell-code}\n    integrate(f(x,y), (x, 0, 1), (y, 0, 2))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=8}\n    ```{=tex}\n    $3$\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  $\\int_0^1\\int_0^2\\int_0^3 xyz \\,dz\\,dy\\,dx$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=9}\n    ``` {.julia .cell-code}\n    @syms z\n    f(x, y, z) = x * y * z\n    integrate(f(x,y,z), (z, 0, 3), (y, 0, 2), (x, 0, 1))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=9}\n    ```{=tex}\n    $\\frac{9}{2}$\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  $\\int_0^3\\int_0^1\\int_0^2 xyz \\,dy\\,dx\\,dz$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=10}\n    ``` {.julia .cell-code}\n    @syms z\n    f(x, y, z) = x * y * z\n    integrate(f(x,y,z), (y, 0, 2), (x, 0, 1), (z, 0, 3))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=10}\n    ```{=tex}\n    $\\frac{9}{2}$\n    ```\n    :::\n    :::\n    \n    \n    :::\n:::\n\n:::{#exr-integrales-dobles-regiones-irregulares}\nCalcular las siguientes integrales dobles sobre las regiones dadas.\n\na.  $\\int_0^2\\int_0^{x/2} e^{x+y}\\,dy\\,dx$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=11}\n    ``` {.julia .cell-code}\n    using SymPy\n    @syms x y\n    f(x, y) = exp(x+y)\n    integrate(f(x,y), (y, 0, x/2), (x, 0, 2))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=11}\n    ```{=tex}\n    $- e^{2} + \\frac{1}{3} + \\frac{2 e^{3}}{3}$\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Calcular la integral anterior invirtiendo el orden de integración.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=12}\n    ``` {.julia .cell-code}\n    integrate(f(x,y), (x, 2y, 2), (y, 0, 1))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=12}\n    ```{=tex}\n    $- e^{2} + \\frac{1}{3} + \\frac{2 e^{3}}{3}$\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  $\\int_0^1\\int_0^{\\sqrt{x}} x^2y\\,dy\\,dx$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=13}\n    ``` {.julia .cell-code}\n    using SymPy\n    @syms x y\n    f(x, y) = x^2*y\n    integrate(f(x,y), (y, x, sqrt(x)), (x, 0, 1))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=13}\n    ```{=tex}\n    $\\frac{1}{40}$\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  $\\int_0^1\\int_y^1 \\cos(x^2) \\,dx\\,dy$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=14}\n    ``` {.julia .cell-code}\n    f(x, y) = cos(x^2)\n    integrate(f(x,y), (x, y, 1), (y, 0, 1))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=14}\n    ```{=tex}\n    $- \\frac{\\sqrt{2} \\sqrt{\\pi} \\left(- \\frac{\\sqrt{2} \\sin{\\left(1 \\right)} \\Gamma\\left(\\frac{1}{4}\\right)}{8 \\sqrt{\\pi} \\Gamma\\left(\\frac{5}{4}\\right)} + \\frac{C\\left(\\frac{\\sqrt{2}}{\\sqrt{\\pi}}\\right) \\Gamma\\left(\\frac{1}{4}\\right)}{4 \\Gamma\\left(\\frac{5}{4}\\right)}\\right) \\Gamma\\left(\\frac{1}{4}\\right)}{8 \\Gamma\\left(\\frac{5}{4}\\right)} + \\frac{\\sqrt{2} \\sqrt{\\pi} C\\left(\\frac{\\sqrt{2}}{\\sqrt{\\pi}}\\right) \\Gamma\\left(\\frac{1}{4}\\right)}{8 \\Gamma\\left(\\frac{5}{4}\\right)}$\n    ```\n    :::\n    :::\n    \n    \n    Como la función $\\cos(x^2)$ no tiene primitiva inmediata, el resultado aparece en función de a función de la [integral de Fresnel](https://es.wikipedia.org/wiki/Integral_de_Fresnel). Sin embargo, resulta más sencillo calcular esta integral doble iterada invirtiendo el orden de integración, es decir, $\\int_0^1\\int_0^x \\cos(x^2) \\,dy\\,dx$.\n\n\n    ::: {.cell execution_count=15}\n    ``` {.julia .cell-code}\n    integrate(f(x,y), (y, 0, x), (x, 0, 1))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=15}\n    ```{=tex}\n    $\\frac{\\sin{\\left(1 \\right)}}{2}$\n    ```\n    :::\n    :::\n    \n    \n    :::\n:::\n\n:::{#exr-integrales-dobles-volumenes}\nCalcular los volúmenes que quedan por debajo de las funciones siguientes en las regiones dadas.\n\na.  $x + 2y + 3z = 6$ en el primer octante.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=16}\n    ``` {.julia .cell-code}\n    using SymPy\n    @syms x y z\n    f(x, y) = solve(x+2y+3z-6, z)[1]\n    g(x) = solve(f(x,y), y)\n    integrate(f(x,y), (y, 0, g(x)), (x, 0, 6))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=16}\n    ```{=tex}\n    $6$\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  $f(x,y) = xy$ en $[-1,1]\\times [-1,1]$.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=17}\n    ``` {.julia .cell-code}\n    using HCubature\n    f(x, y) = abs(x*y)\n    f(v) = f(v...)\n    hcubature(f, [-1,-1], [1,1])\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=17}\n    ```\n    (1.0, 0.0)\n    ```\n    :::\n    :::\n    \n    \n    :::\n:::\n\n:::{#exr-volumen-balsa}\nUn balsa de residuos líquidos con forma elíptica de ecuación $2x^2 + y^2 = 9$ tiene una profundidad dada por la función $f(x,y) = \\frac{x^2}{2} + \\frac{y^2}{2} - 10$. Calcular el volumen de la balsa.\n:::\n\n:::{#exr-volumen-entre-superficies}\nCalcular el volumen comprendido entre las superficies de las funciones $f(x,y)=x^2+y^2$ y $g(x,y)=2x$.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n::: {.cell execution_count=18}\n``` {.julia .cell-code}\nusing SymPy\n@syms x y\nf(x, y) = x^2 + y^2\ng(x, y) = 2x\nsol = solve(f(x,y)-g(x,y), y)\nintegrate(g(x,y)-f(x,y), (y, sol[1], sol[2]), (x, 0, 2))\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=tex}\n$- \\frac{\\pi}{2}$\n```\n:::\n:::\n\n\n:::\n:::\n\n:::{#exr-volumen-entre-superficies}\nUna placa metálica delimitada por las curvas $y=2-x^2$ e $y=-3+2x^2$ tiene una densidad dada por la función $d(x,y)=x^2y^2$.\n\na.  Calcular la masa de la placa.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    La masa de una región plana con densidad variable $\\delta(x,y)$ se calcula mediante la integral.\n\n    $$\n    \\int_R \\delta(x,y)\\,dA.\n    $$\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell execution_count=19}\n    ``` {.julia .cell-code}\n    using SymPy\n    @syms x y\n    d(x,y) = x^2 * y^2\n    g(x) = 2 - x^2\n    h(x) = -3 + 2x^2\n    sol = solve(g(x)-h(x), x)\n    m = integrate(d(x,y), (y, h(x), g(x)), (x, sol[1], sol[2]))\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=19}\n    ```{=tex}\n    $\\frac{460 \\sqrt{15}}{729}$\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Calcular el centro de masas de la placa\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Las coordenadas del centro de masas se obtienen mediante las siguientes integrales.\n\n    \\begin{align*}\n    \\bar x \n    &= \\frac{M_y}{m}\n    = \\frac{\\int_R x\\delta(x,y)\\,dA}{\\int_R \\delta(x,y)\\,dA} \\\\\n    \\bar y\n    &= \\frac{M_x}{m}\n    = \\frac{\\int_R y\\delta(x,y)\\,dA}{\\int_R \\delta(x,y)\\,dA}\n    \\end{align*}\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    Calculamos primero la componente $x$ del centro de masas. \n\n\n    ::: {.cell execution_count=20}\n    ``` {.julia .cell-code}\n    # Momento con respecto a y\n    my = integrate(x*d(x,y), (y, h(x), g(x)), (x, sol[1], sol[2]))\n    # Centro de masas en x.\n    my / m\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=20}\n    ```{=tex}\n    $0$\n    ```\n    :::\n    :::\n    \n    \n    Y después la componente $y$ del centro de masas.\n\n\n    ::: {.cell execution_count=21}\n    ``` {.julia .cell-code}\n    # Momento con respecto a x\n    mx = integrate(y*d(x,y), (y, h(x), g(x)), (x, sol[1], sol[2]))\n    # Centro de masas en y.\n    mx / m\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=21}\n    ```{=tex}\n    $- \\frac{4159}{5313}$\n    ```\n    :::\n    :::\n    \n    \n    :::\n:::\n\n",
    "supporting": [
      "10-integrales-funciones-varias-variables_files/figure-pdf"
    ],
    "filters": []
  }
}