---
title: Integrales de funciones
lang: es
jupyter: julia-1.8
---

## Ejercicios Resueltos

Para la realización de esta práctica se requieren los siguientes paquetes:

```{julia}
using SymPy  # Para el cálculo simbólico de integrales.
using QuadGK # Para el cálculo numérico de integrales.
using Plots  # Para el dibujo de gráficas.
#plotlyjs() # Para obtener gráficos interactivos.
using LaTeXStrings  # Para usar código LaTeX en los gráficos.
```

:::{#exr-sumas-riemann}
Sea $f(x)=x^2$.

a.  Calcular la suma inferior de Riemann de $f$ en el intervalo $[0,1]$, tomando una partición de 10 subinvervalos de igual amplitud.

    :::{.callout-tip collapse="true"}
    ## Solución
    ```{julia}
    f(x) = x^2
    Δx = 1/10
    areas_inf = [f((i-1)*Δx)*Δx for i = 1:10]
    sum_inf = sum(areas_inf)
    ```
    :::

a.  Calcular la suma superior de Riemann de $f$ en el intervalo $[0,1]$, tomando una partición de 10 subinvervalos de igual amplitud.

    :::{.callout-tip collapse="true"}
    ## Solución
    ```{julia}
    f(x) = x^2
    Δx = 1/10
    areas_sup = [f(i*Δx)*Δx for i = 1:10]
    sum_sup = sum(areas_sup)
    ```
    :::

a.  Dar una cota del error cometido en la aproximación del área encerrada entre la gráfica de $f$ y el eje $x$ en el intervalo $[0,1]$ tomando sumas de Riemann para una partición en 10 subintervalos.

    :::{.callout-tip collapse="true"}
    ## Solución
    ```{julia}
    error = sum_sup - sum_inf
    ```
    :::

a.  Definir una función para calcular de manera aproximada el área encerrada entre la gráfica de $f$ y el eje $x$ en el intervalo $[a,b]$ tomando sumas de Riemann para una partición en $n$ subintervalos, y el error cometido en la aproximación. Utilizarla para calcular los errores aproximados al aproximar el area de $f($ en el intervalo $[0,1]$ tomando particiones desde 10 a 100 subintervalos.

    :::{.callout-tip collapse="true"}
    ## Solución
    ```{julia}
    using PrettyTables
    f(x) = x^2
    function area_inf(a, b, n)
        Δx = (b-a)/n
        return sum([f(a+(i-1)*Δx)*Δx for i = 1:n])
    end

    function area_sup(a, b, n)
        Δx = (b-a)/n
        return sum([f(a+i*Δx)*Δx for i = 1:n])
    end

    function area(a, b, n)
        area = (area_inf(a, b, n) + area_sup(a, b, n)) / 2
        error = area_sup(a, b, n) - area_inf(a, b, n)
        return area, error
    end

    areas = [area(0, 1, n) for n=10:100]
    pretty_table(hcat(first.(areas), last.(areas)); header = ["Aproximación", "Error"])
    ```
    :::
:::

:::{#exr-primitivas}
Calcular las primitivas de las siguientes funciones:

a.  $f(x)=x^2\ln(x)$

    :::{.callout-tip collapse="true"}
    ## Solución

    Para calcular la primitiva de una función se puede usar la función [`integrate(f)`](https://docs.juliahub.com/SymPy/KzewI/1.0.31/Tutorial/calculus/#Integrals-1) del paquete [`SymPy`](https://docs.juliahub.com/SymPy/KzewI/1.0.31/), donde `f` es la función a integrar.

    ```{julia}
    using SymPy
    @vars x real=true
    primitiva = integrate(x^2*ln(x))
    ```

    Obsérvese que la primitiva obtenida con la función `integrate` no incluye la típica constante que define la familia de primitivas. 

    Podemos comprobar que efectivamente es la primitiva derivándola.

    ```{julia}
    diff(primitiva)
    ```
    :::

    
a.  $g(x)= \dfrac{\ln(\ln(x))}{x}$

    :::{.callout-tip collapse="true"}
    ## Solución
    ```{julia}
    integrate(ln(ln(x))/x)
    ```
    :::

a.  $h(x)= \dfrac{6x+5}{(x^2+x+1)^2}$

    :::{.callout-tip collapse="true"}
    ## Solución

    Se trata de una función racional, así que hacemos primero la descomposición en fracciones simples.

    ```{julia}
    h(x) = (2x^3+x^2+6)/(x^5-x)
    # Descomposición en fracciones simples.
    apart(h(x))
    ```

    Y ahora calculamos la primitiva.

    ```{julia}
    integrate(h(x))
    ```
    :::

a.  $i(x)= x^a$

    :::{.callout-tip collapse="true"}
    ## Solución

    Cuando en la función aparece algún parámetro, es necesario indicar la variable con respecto a la que calcular la integral. Para ello se utiliza la función `integrate(f, x)`, siendo `x` la variable con respecto a la que integrar.

    ```{julia}
    @vars a real=true
    integrate(x^a, x)
    ```
    :::

a.  $j(x) = (1 + \log(x))\sqrt{1 + x^2\log(x)^2}$

    :::{.callout-tip collapse="true"}
    ## Solución
    ```{julia}
    @vars x real=true
    j(x) = (1 + log(x)) * sqrt(1 + (x*log(x))^2 )
    # El cálculo directo de la integral no funciona.
    integrate(j(x))
    # Ayudamos a SymPy con la sustitución.
    u(x) = x*log(x)
    @vars y dy real=true
    # Definimos la nueva función con el cambio de variable.
    g(y) = j(x)(u(x) => y, diff(u(x), x) => 1)
    # Integramos la nueva función y deshacemos el cambio de variable.
    integrate(g(y))(y => u(x))
    ```
    :::
:::

:::{#exr-integrales-definidas}
Calcular las siguientes integrales definidas:

a.  $\displaystyle \int_{-1/2}^0 \frac{x^3}{x^2+x+1}\, dx$

    :::{.callout-tip collapse="true"}
    ## Solución

    Para calcular una integral definida también se puede usar la función `integrate(f, a, b)`, del paquete `SymPy`, donde, además de la función `f`, hay que indicar los límites de integración `a` y `b`.

    ```{julia}
    using SymPy
    @vars x real=true
    integrate(x^3/x^2+x+1, -1/2, 0)
    ```
    :::

a.  $\displaystyle \int_2^4 \frac{\sqrt{16-x^2}}{x}\, dx$

    :::{.callout-tip collapse="true"}
    ## Solución
    ```{julia}
    integrate(sqrt(16-x^2)/x, 2, 4)
    ```
    :::

a.  $\displaystyle \int_0^{\pi/2} \frac{dx}{3+\cos(2x)}$

    :::{.callout-tip collapse="true"}
    ## Solución
    ```{julia}
    integrate(1/(3+cos(2x)), 0, PI/2)
    ```
    :::
:::

:::{#exr-integracion-numerica}
Calcular la integral definida $\displaystyle \int_0^1 x^x\, dx$ con un error menor de 10^{-10}.
:::

:::{.callout-tip collapse="true"}
## Solución

```{julia}
using SymPy
@vars x real=true
f(x) = x^x
integrate(f(x), 0, 1)
```

Esta función no tiene primitiva como se puede comprobar al realizar la integral con la función `integrate`. Para calcularla hay que recurrir a métodos numéricos de aproximación. Para ello se puede usar la función [`quadgk`](https://juliamath.github.io/QuadGK.jl/stable/functions/#QuadGK.quadgk) del paquete [`QuadGK`](https://juliamath.github.io/QuadGK.jl/stable/) que realiza el cálculo de la integral mediante el método de la cuadratura de Gauss-Kronrod.

```{julia}
using QuadGK
quadgk(f(x), 0, 1, rtol = 10^-10)
```
:::

:::{#exr-area-una-funcion}
Dibujar y calcular el área encerrada por la parábola $y=x^{2}-7x+6$ y el eje de abscisas en el intervalo $[2,7]$.
:::
    
:::{.callout-tip collapse="true"}
## Solución 1
Dibujamos primero la región.

```{julia}
using Plots, SymPy, LaTeXStrings
@vars x real = true
f(x) = x^2-7x+6
plot(f, 2, 7, fillrange = 0, fillalpha = 0.3, label = L"$f(x)=x^2-7x+6$")
```

Para calcular este área no podemos calcular directamente la integral definida de la función enter 2 y 7 porque el área positiva se compensaría con la negativa. Tenemos que descomponer la región en dos partes según el signo de la función e integrarlas por separado.

```{julia}
# Calculamos primero las raíces de la función
solve(f(x))
# Descomponemos el intervalo de integración en los subintervalos [2,6] (función negativa) y [6,7] (función positiva) y calculamos las integrales por separado
-integrate(f, 2, 6) + integrate(f, 6, 7)
```
:::

:::{.callout-tip collapse="true"}
## Solución 2
En general, para calcular áreas bajo una curva es más rápido integrar el valor absoluto de la función.
```{julia}
integrate(abs(f(x)), 2, 7)
```
:::  

:::{#exr-area-dos-funciones}
Calcular y dibujar el área comprendida entre las parábolas $y=-x^2+6x$ e $y=x^2-2x$.
:::

:::{.callout-tip collapse="true"}
## Solución
Calculamos primero el área comprendida entre las dos funciones.

```{julia}
using Plots, SymPy, LaTeXStrings
@vars x real = true
f(x) = -x^2+6x
g(x) = x^2-2x
# Calculamos primero los puntos de corte de la función.
raices = solve(f(x)-g(x))
# Descomponemos el intervalo de integración en los subintervalos [2,6] (función negativa) y [6,7] (función positiva) y calculamos las integrales por separado
sol = integrate(f(x)-g(x), raices[1], raices[2])
```

Y ahora dibujamos el área calculada.

```{julia}
using Plots, SymPy, LaTeXStrings
@vars x real = true
f(x) = -x^2+6x
g(x) = x^2-2x
plot(f, -1, 5, label = L"$f(x)=-x^2+6x$")
plot!(g, 0, 4, fillrange = f, fillalpha = 0.3, label = "")
plot!(g, label = L"$g(x)=x^2-2x$")
annotate!(2, 4, sol)
```
:::

:::{#exr-integral-impropia}
Dibujar la gráfica de la función $f(x)=e^{-x}$ y calcular el área total encerrada entre la gráfica y el eje $x$ para $x>0$.
:::

:::{.callout-tip collapse="true"}
## Solución
Dibujamos primero la gráfica.

```{julia}
using Plots, SymPy, LaTeXStrings
@vars x real = true
f(x) = exp(-x)
plot(f(x), 0, 10, label = L"$f(x)=e^{-x}$")
```

Y ahora calculamos el área mediante la integral impropia entre $0$ y $\infty$.

```{julia}
integrate(f(x), 0, oo)
```
:::

:::{#exr-valor-medio}
Un vehículo se mueve con una velocidad dada por la función $\operatorname(sen)(t)^2$. ¿Cuál es la velocidad media en el intervalo $[0,2\pi]$?
:::

:::{.callout-tip collapse="true"}
## Solución
Para calcular el valor medio de una función $f(x)$ en un intervalo $[a,b]$ tenemos que calcular la integral definida

$$
\frac{1}{b-a}\int_a^b f(x)\,dx.
$$

```{julia}
using SymPy
@vars x real = true
f(x) = sin(x)^2
1/(2*PI) * integrate(f(x), 0, 2PI)
```
:::

:::{#exr-solido-revolucion-discos}
Representar gráficamente la región del primer cuadrante limitada por la función $f(x)=(x+\operatorname{sen}(x))^2$ y el eje $x$ en el intervalo $[0,2\pi]$ y hallar el volumen del sólido de revolución generado al rotar esta región alrededor del eje $x$.
:::

:::{.callout-tip collapse="true"}
## Solución

Dibujamos primero la región.

```{julia}
using SymPy, Plots
@vars x real = true
f(x) = sin(x)+2
plot(f, 0, 2pi, ylim=(0,3), fillrange = 0, fillalpha = 0.3, label = "")
```

Para calcular el volumen de un sólido de revolución generado al rotar la gráfica de una función $f(x)$ alrededor del eje $x$ en el intervalo $[a,b]$, mediante discos cilíndricos perpendiculares al eje $x$, hay que calcular la integral definida

$$
\int_a^b \pi f(x)^2\, dx
$$

```{julia}
N(integrate(pi*f(x)^2, 0, 2pi))
```
:::

:::{#exr-solido-revolucion-envolventes}
Calcular el volumen del toro que se obtiene al rotar la circunferencia de ecuación $(x-2)^2+y^2=1$ alrededor del eje $y$.
:::

:::{.callout-tip collapse="true"}
## Solución

Dibujamos primero la región.

```{julia}
using SymPy, Plots
@vars x real = true
f(x) = sqrt(1-(x-2)^2)
plot(f(x), 0, 4, fillrange = 0, fillalpha = 0.3, aspect_ratio = 1, label = "")
plot!(-f(x), 0, 4, fillrange = 0, fillalpha = 0.3, aspect_ratio = 1, label = "")
```

En este caso, usaremos envoltorios cilíndricos para calcular el volumen del sólido de revolución. Para calcular el sólido de revolución que se obtiene al rotar alrededor del eje $y$ la gráfica de una función $f(x)$ en el intervalo $[a,b]$, mediante envoltorios cilíndricos, hay que calcular la integral definida

$$
\int_a^b 2\pi x f(x)\,dx.
$$

Para el caso particular del toro, calcularemos la mitad de su volumen aprovechando que es simétrico con respecto al plano $xz$ y lo multiplicaremos por 2.

```{julia}
2 * integrate(2PI*x*f(x), 1, 3)
```
:::

:::{#exr-longitud-teja}
Una empresa fabrica tejas de chapa con forma ondulada cuyo perfil viene dado por la curva $y=\operatorname{sin}\left(\frac{x}{2}\right)$. Si se quieren obtener tejas de 100 cm de longitud, ¿qué longitud tienen que tener las planchas de chapa para fabricarlas?
:::

:::{.callout-tip collapse="true"}
## Solución

Dibujamos primero el perfil de las chapas.

```{julia}
using SymPy, Plots
@vars x real = true
f(x) = sin(x/2)
plot(f(x), 0, 100, aspect_ratio = 1, label = "")
```

Para calcular la longitud de una curva dada por la gráfica de una función $f(x)$ en un intervalo $[a,b]$, hay que calcular la integral 

$$
\int_a^b \sqrt{1+f'(x)^2}\,dx.
$$

```{julia}
using QuadGK
quadgk(sqrt(1+diff(f(x))^2), 0, 100)
```
:::


## Ejercicios propuestos

```{julia}
#| echo: false
#| results: "hidden"
using QuizQuestions, SymPy
nothing
```

:::{#exr-series-propuesto-3}
Calcular el area encerrada entre las funciones $f(x)=\operatorname{sin}(x)$ y $\cos(x)$ en el intervalo $[0,2\pi]$.

```{julia}
#| hold: true
#| echo: false
@vars x real = true
f(x) = sin(x)
g(x) = cos(x)
sol = N(integrate(abs(f(x)-g(x)), 0, pi))
numericq(sol, 1e-5, hint="Introducir hasta 5 decimales")
```
:::

:::{#exr-series-propuesto-4}
Dibujar la gráfica de la función $f(x)=\dfrac{1}{\sqrt{2\pi}}e^{\frac{-x^2}{2}}$ y calcular el área total encerrada entre la gráfica y el eje $x$.

```{julia}
#| hold: true
#| echo: false
using QuadGK
@vars x real = true
f(x) = exp(-1/2 * x^2)/sqrt(2*pi)
sol = N(integrate(f(x), -oo, oo))
numericq(sol, 1e-5, hint="Introducir hasta 5 decimales")
```
:::

:::{#exr-series-propuesto-5}
La función $T(t)=100te^{-t}$ define la temperatura de un sistema en cada instante $t$. Calcular la temperatura media en el intervalo $[0,5]$.

```{julia}
#| hold: true
#| echo: false
@vars t real = true
T(t) = 100t*exp(-t)
sol = N(1/5 * integrate(T(t), 1, 5))
numericq(sol, 1e-5, hint="Introducir hasta 5 decimales")
```
:::

:::{#exr-series-propuesto-8}
La curva $y=a\cosh(x/a)$ se conoce como _catenaria_. ¿Cuál es la longitud de la catenaria con $a=2$ entre $-1$ y $1$?

```{julia}
#| hold: true
#| echo: false
@vars x real = true
c(x) = 2cosh(x/2)
sol = quadgk(sqrt(1+diff(c)^2), -1, 1)
numericq(sol[1], 1e-5, hint="Introducir hasta 5 decimales")
```
:::